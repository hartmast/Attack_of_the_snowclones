# function for getting prettyfied dataframe
df_pretty <- as.data.frame(lapply(1:length(df),
function(i) if(!class(df[[i]]) %in% c("character", "factor"))
{
round_this(df[[i]])
} else {
return(df[[i]])
})
)
# set names to original names
colnames(df_pretty) <- colnames(df)
return(df_pretty)
}
# search for entire words
grepw <- function(pattern, x, perl = F, ...) {
grep(paste("^", pattern, "$", sep="", collapse=""), x, perl = perl, ...)
}
d <- read_xlsx("ENCOW_x_is_the_new_y_without_false_hits.xlsx")
setwd("~/Dropbox/Privat/Projekte/snowclones/Snowclones_paper_supplements")
d <- read_xlsx("ENCOW_x_is_the_new_y_without_false_hits.xlsx")
d <- filter(d, keep == "y")
d$wordcount_x <- sapply(1:nrow(d), function(i) wordcount(trimws(d$Lemma_x[i])))
d$wordcount_y <- sapply(1:nrow(d), function(i) wordcount(trimws(d$Lemma_y[i])))
# empty columns for heads
d$head_x <- NA; d$head_y <- NA
# add wordcount for x and y lemmas
d$wordcount_x <- sapply(1:nrow(d), function(i) wordcount(trimws(d$Lemma_x[i])))
d$wordcount_y <- sapply(1:nrow(d), function(i) wordcount(trimws(d$Lemma_y[i])))
# get heads
for(i in 1:nrow(d)) {
if(d$wordcount_x[i]>1) {
if(d$pos_x[i]!="NE" & grepl("[A-Z]{2,}", d$Lemma_x[i])) {
d$head_x[i] <- tolower(unlist(strsplit(d$Lemma_x[i], " "))[grepl("[A-Z]{2,}", unlist(strsplit(d$Lemma_x[i], " ")))][1])
} else{
temp <- unlist(strsplit(d$Lemma_x[i], " "))
d$head_x[i] <- tolower(temp[length(temp)])
}
} else {
d$head_x[i] <- tolower(d$Lemma_x[i])
}
if(d$wordcount_y[i]>1) {
if(d$pos_y[i]!="NE" & grepl("[A-Z]{2,}", d$Lemma_y[i])) {
d$head_y[i] <- tolower(unlist(strsplit(d$Lemma_y[i], " "))[grepl("[A-Z]{2,}", unlist(strsplit(d$Lemma_y[i], " ")))][1])
} else{
temp <- unlist(strsplit(d$Lemma_y[i], " "))
d$head_y[i] <- tolower(temp[length(temp)])
}
} else {
d$head_y[i] <- tolower(d$Lemma_y[i])
}
}
# backup copy for subsequent analysis
d_backup <- d
d <- d[-which(d$concept_x=="unclear" | d$concept_y=="unclear"),]
tibble(
types_x = length(unique(d$head_x)),
types_y = length(unique(d$head_y)),
types   = length(unique(paste0(d$head_x, "/", d$head_y))),
hapaxes_x = table(d$head_x) %>% as_tibble(.name_repair = "unique") %>% setNames(c("lemma_x", "n")) %>% filter(n == 1) %>% nrow(),
hapaxes_y = table(d$head_y) %>% as_tibble(.name_repair = "unique") %>% setNames(c("lemma_y", "n")) %>% filter(n == 1) %>% nrow(),
hapaxes_all = paste0(d$head_x, "/", d$head_y) %>% table %>% as_tibble() %>% setNames(c("lemma", "n")) %>% filter(n == 1) %>% nrow,
tokens = nrow(d)
) %>% kbl()
# network ----------------------------------------------------------------
d$concept_x <- factor(d$concept_x); d$concept_y <- factor(d$concept_y)
tbl <- d %>% select(concept_x, concept_y) %>% table %>% as.data.frame
tbl$number_x <- as.numeric(factor(tbl$concept_x))
tbl$number_y <- as.numeric(factor(tbl$concept_y))
# add a column in which the frequency is 0 if
# concept_x == concept_y
tbl$Freq_noself <- ifelse(tbl$concept_x == tbl$concept_y, NA, tbl$Freq)
conc_by_freq <- d$concept_x %>% table %>% sort(decreasing = T) %>% rownames()
tbl$concept_x <- factor(tbl$concept_x, levels = conc_by_freq)
tbl$concept_y <- factor(tbl$concept_y, levels = conc_by_freq)
tbl %>% ggplot(aes(x = concept_x, y = concept_y, fill = log0(Freq))) +
geom_tile() + scale_fill_gradient(low = "yellow", high = "darkred") +
theme(axis.text.x = element_text(angle=45, hjust=.9)) +
guides(fill = guide_legend(title = "LogFreq"))
( p1 <- tbl %>% filter(Freq > 0) %>% ggplot(aes(x = concept_x, y = concept_y, fill = log0(Freq), label = Freq)) +
geom_tile() + scale_fill_gradient(low = "yellow", high = "darkred") +
guides(fill = guide_legend(title = "LogFreq")) + theme_classic() +
theme(axis.text.x = element_text(angle=45, hjust=.9)) +
geom_text(col = ifelse(log(filter(tbl, Freq > 0)$Freq > 6), "black", "white"), size = 4) +
theme(axis.text = element_text(size = 18)) +
theme(axis.title = element_text(size = 18)) +
theme(strip.text = element_text(size = 18)) +
theme(legend.text = element_text(size = 18)) +
theme(legend.title = element_text(size = 18, face = "bold")) +
theme(text = element_text(size = 18))
)
( p2 <- tbl %>% filter(Freq > 0) %>%
ggplot(aes(x = concept_x, y = concept_y, fill = log0(Freq_noself), label = Freq_noself)) +
geom_tile() + scale_fill_gradient(low = "yellow", high = "darkred") +
guides(fill = guide_legend(title = "LogFreq")) + theme_classic() +
theme(axis.text.x = element_text(angle=45, hjust=.9)) +
geom_text(col = ifelse(log(filter(tbl, Freq > 0)$Freq_noself > 6), "black", "white"), size = 4) ) +
theme(axis.text = element_text(size = 18)) +
theme(axis.title = element_text(size = 18)) +
theme(strip.text = element_text(size = 18)) +
theme(legend.text = element_text(size = 18)) +
theme(legend.title = element_text(size = 18, face = "bold")) +
theme(text = element_text(size = 18))
# export heads for lemmatization ------------------------------------------
c(d %>% filter(!(concept_x=="person" & pos_x=="NE")) %>% select(head_x),
d %>% filter(!(concept_y=="person" & pos_y=="NE")) %>% select(head_y)) %>%
unlist %>% unique %>% as.data.frame
l <- read_csv("lemmatization.csv")
lx <- left_join(tibble(word = d$head_x),
l) %>% na.omit %>% select(lemma) %>% table %>% as.data.frame(stringsAsFactors = F) %>% setNames(c("lemma", "Freq"))
ly <- left_join(tibble(word = d$head_y),
l) %>% na.omit %>% select(lemma) %>% table %>% as.data.frame(stringsAsFactors = F) %>% setNames(c("lemma", "Freq"))
encow <- read_csv("x_is_the_new_y_encow_frequencies.csv")
# add frequencies -----------------------------------------------
lx$Freq_encow <- sapply(1:nrow(lx), function(i) sum(encow[grepw(lx$lemma[i], encow$word),]$Freq_encow))
ly$Freq_encow <- sapply(1:nrow(ly), function(i) sum(encow[grepw(ly$lemma[i], encow$word),]$Freq_encow))
# omit all that are not attested in ENCOW
lx <- filter(lx, Freq_encow > 0)
ly <- filter(ly, Freq_encow > 0)
collex.dist(lx) %>% datatable() %>% formatSignif(columns = c("E.CXN1", "E.CXN2", "COLL.STR.LOGL"), digits=3)
collex.dist(ly) %>% datatable() %>% formatSignif(columns = c("E.CXN1", "E.CXN2", "COLL.STR.LOGL"), digits=3)
d <- left_join(d, rename(l, c(lemma_head_x = lemma)), by = c("head_x" = "word"), all.x = T)
d <- left_join(d, rename(l, c(lemma_head_y = lemma)), by = c("head_y" = "word"), all.x = T)
# fill NA head columns
d$lemma_head_x <- ifelse(is.na(d$lemma_head_x), d$head_x, d$lemma_head_x)
d$lemma_head_y <- ifelse(is.na(d$lemma_head_y), d$head_y, d$lemma_head_y)
# collocates
coll <- read_csv("../ENCOW_x_is_the_new_y/distsem/collocates.csv")
# "collocate" column to rownames:
coll <- as.data.frame(coll)
rownames(coll) <- coll$collocate
coll <- coll[ , -1] # remove first column
coll <- t(coll) # switch rows and columns
# get expected frequencies
coll <- as.matrix(coll)
coll.exp <- chisq.test(coll)$expected
coll.PMI <- log2(coll / coll.exp)
coll.PPMI <- ifelse(coll.PMI < 0, 0, coll.PMI)
# cosine similarity function
# (adopted from Levshina's [2015] Rling package)
nr <- nrow(coll)
m <- matrix(NA, nr, nr)
colnames(m) <- rownames(m) <- rownames(coll)
# export
# saveRDS(m, "m.Rds")
m <- readRDS("../ENCOW_x_is_the_new_y/distsem/m.Rds")
# get distances
m2 <- 1 - (m / max(m[m<1]))
# backup copy
m2_matrix <- m2
# as.dist
m2 <- as.dist(m2)
# as matrix
m2_matrix <- as.matrix(m2, varnames = c("row", "col"))
# mds
m3 <- cmdscale(m2)
m3 <- rownames_to_column(as.data.frame(m3))
colnames(m3) <- c("Lemma", "dim1", "dim2")
# Clusters
m2_clust <- cluster::pam(m2, 14)
m2_cluster <- m2_clust$clustering %>% as.data.frame()
m2_cluster <- rownames_to_column(m2_cluster)
colnames(m2_cluster) <- c("Lemma", "Cluster")
# join dataframes
m3 <- left_join(m3, m2_cluster)
# add frequency information
m3 <- left_join(m3, l, by = c("Lemma" = "word"))
m3$freq_x <- sapply(1:nrow(m3), function(i) length(which(d$lemma_head_x == m3$lemma[i])))
m3$freq_y <- sapply(1:nrow(m3), function(i) length(which(d$lemma_head_y == m3$lemma[i])))
m3$freq <- m3$freq_x + m3$freq_y
# set a seed so that the location of the datapoints
# (arranged by ggrepel package) will remain the same
set.seed(1985)
#plot
(p1 <- ggplot(filter(m3, freq >= 5), aes(x = dim1, y = dim2, label = Lemma, col = factor(Cluster))) +
geom_text_repel(aes(size = log1p(freq)*2), max.overlaps = 15) +
scale_color_discrete(terrain.colors(14)) +
guides(col = "none", size = "none") + theme_bw() + theme(axis.text = element_text(size = 18)) +
theme(axis.title = element_text(size = 18)) +
theme(strip.text = element_text(size = 18)) +
theme(legend.text = element_text(size = 18)) +
theme(legend.title = element_text(size = 18, face = "bold")) +
theme(text = element_text(size = 10)) )
p1
ggplot(m3, aes(x = dim1, y = dim2, col = rel_x, label = Lemma)) +
geom_text_repel(aes(size = log1p(freq)*2)
#,
#arrow = arrow(length = unit(0.02, "npc"),
#             type = "closed")
) + scale_color_continuous(low = "blue", high = "red") +
guides(col = F, size = F) + theme_bw() + theme(axis.text = element_text(size = 18)) +
theme(axis.title = element_text(size = 18)) +
theme(strip.text = element_text(size = 18)) +
theme(legend.text = element_text(size = 18)) +
theme(legend.title = element_text(size = 18, face = "bold")) +
theme(text = element_text(size = 10))
# add relative frequency with which each item occurs in x or y slot
m3$rel_x <- m3$freq_x / (m3$freq_x + m3$freq_y)
m3$rel_y <- m3$freq_y / (m3$freq_x + m3$freq_y)
m3 <- replace_na(m3, list(rel_x = 0, rel_y = 0))
# alternative plot: color shows relative frequency in x or y ploz
ggplot(m3, aes(x = dim1, y = dim2, col = rel_x, label = Lemma)) +
geom_text_repel(aes(size = log1p(freq)*2)
#,
#arrow = arrow(length = unit(0.02, "npc"),
#             type = "closed")
) + scale_color_continuous(low = "blue", high = "red") +
guides(col = F, size = F) + theme_bw() + theme(axis.text = element_text(size = 18)) +
theme(axis.title = element_text(size = 18)) +
theme(strip.text = element_text(size = 18)) +
theme(legend.text = element_text(size = 18)) +
theme(legend.title = element_text(size = 18, face = "bold")) +
theme(text = element_text(size = 10))
ggsave("distsem03.png", width = 8, height = 8)
distances <- d %>% arrange(desc(cosine_distance)) %>%
select(lemma_head_x, lemma_head_y, cosine_distance) %>% na.omit %>%
unique
# add Cosine distance to original dataframe
d$cosine_distance <- NA
for(i in 1:nrow(d)) {
if(d$lemma_head_x[i] %in% colnames(m2_matrix) &&
d$lemma_head_y[i] %in% rownames(m2_matrix)) {
d$cosine_distance[i] <- m2_matrix[which(colnames(m2_matrix) == d$lemma_head_x[i]),
which(rownames(m2_matrix) == d$lemma_head_y[i])]
}
}
# add column with x and y
d$lemma_heads <- character(nrow(d))
d$lemma_heads <- paste(d$lemma_head_x, d$lemma_head_y, sep = "/")
d %>% arrange(desc(cosine_distance)) %>%
select(lemma_head_x, lemma_head_y, cosine_distance) %>% na.omit %>%
unique %>% datatable() %>% formatSignif(columns = "cosine_distance", digits=3)
# add relative freqeuency in x and y slot
m3$rel_x <- m3$freq_x / (m3$freq_x + m3$freq_y)
m3$rel_y <- m3$freq_y / (m3$freq_x + m3$freq_y)
m3 <- replace_na(m3, list(rel_x = 0, rel_y = 0))
# set a seed so that the location of the datapoints
# (arranged by ggrepel package) will remain the same
set.seed(1985)
#plot
(p2 <- ggplot(filter(m3, freq >= 5), aes(x = dim1, y = dim2, label = Lemma, col = rel_x)) +
geom_text_repel(aes(size = log1p(freq)*2), max.overlaps = 15) +
scale_color_continuous(low = "blue", high = "red") +
guides(col = "none", size = "none") + theme_bw() + theme(axis.text = element_text(size = 18)) +
theme(axis.title = element_text(size = 18)) +
theme(strip.text = element_text(size = 18)) +
theme(legend.text = element_text(size = 18)) +
theme(legend.title = element_text(size = 18, face = "bold")) +
theme(text = element_text(size = 10)) )
distances <- d %>% arrange(desc(cosine_distance)) %>%
select(lemma_head_x, lemma_head_y, cosine_distance) %>% na.omit %>%
unique
distances %>% ggplot(aes(x = cosine_distance)) + geom_histogram(binwidth = 0.03, col = "black", fill = "grey") + theme_classic() + ylab("Count") + xlab("Cosine distance")
which(distances$lemma_head_x == "anxiety" & distances$lemma_head_y == "depression")
distances[which(distances$lemma_head_x == "anxiety" & distances$lemma_head_y == "depression"),]
find_items <- function(x, y) {
return(distances[which(distances$lemma_head_x == x & distances$lemma_head_y == y),])
}
find_items("anxiety", "depression")
find_items("female", "male"),
find_items("democrat", "republican")
rbind(find_items("anxiety", "depression")
find_items("female", "male"),
find_items("democrat", "republican"))
find_items("female", "male"),
find_items("democrat", "republican")
rbind(find_items("anxiety", "depression"),
rbind(find_items("anxiety", "depression"),
find_items("female", "male"),
find_items("democrat", "republican"))
rbind(find_items("anxiety", "depression"),
find_items("female", "male"),
find_items("democrat", "republican"))
rbind(find_items("anxiety", "depression"),
find_items("female", "male"),
find_items("democrat", "republican"))
rbind(find_items("anxiety", "depression"),
find_items("female", "male"),
find_items("democrat", "republican"),
find_items("abnormality", "disease"),
find_items("alpha", "beta"),
find_items("audio", "video"),
find_items("pear", "raspberry"),
find_items("sushi", "pizza"),
find_items("small", "large"),
find_items("environmentalist", "socialist"),
find_items("sugar", "nicotine"),
find_items("computer", "radio"),
find_items("publishing", "literacy"),
find_items("paper", "confidentiality"),
find_items("mean", "green"),
find_items("sustainable", "black"),
find_items("ethics", "green"),
find_items("funds", "black")
)
rbind(find_items("anxiety", "depression"),
find_items("female", "male"),
find_items("democrat", "republican"),
find_items("abnormality", "disease"),
find_items("alpha", "beta"),
find_items("audio", "video"),
find_items("pear", "raspberry"),
find_items("sushi", "pizza"),
find_items("small", "large"),
find_items("environmentalist", "socialist"),
find_items("sugar", "nicotine"),
find_items("computer", "radio"),
find_items("publishing", "literacy"),
find_items("paper", "confidentiality"),
find_items("mean", "green"),
find_items("sustainable", "black"),
find_items("ethics", "green"),
find_items("funds", "black")
) %>% mutate(lemmas = paste0(lemma_head_x, " - ", lemma_head_y))
rbind(find_items("anxiety", "depression"),
find_items("female", "male"),
find_items("democrat", "republican"),
find_items("abnormality", "disease"),
find_items("alpha", "beta"),
find_items("audio", "video"),
find_items("pear", "raspberry"),
find_items("sushi", "pizza"),
find_items("small", "large"),
find_items("environmentalist", "socialist"),
find_items("sugar", "nicotine"),
find_items("computer", "radio"),
find_items("publishing", "literacy"),
find_items("paper", "confidentiality"),
find_items("mean", "green"),
find_items("sustainable", "black"),
find_items("ethics", "green"),
find_items("funds", "black")
) %>% mutate(lemmas = paste0(lemma_head_x, " - ", lemma_head_y)) %>%
ggplot(aes(x = cosine_distance, y = lemmas)) + geom_histogram()
rbind(find_items("anxiety", "depression"),
find_items("female", "male"),
find_items("democrat", "republican"),
find_items("abnormality", "disease"),
find_items("alpha", "beta"),
find_items("audio", "video"),
find_items("pear", "raspberry"),
find_items("sushi", "pizza"),
find_items("small", "large"),
find_items("environmentalist", "socialist"),
find_items("sugar", "nicotine"),
find_items("computer", "radio"),
find_items("publishing", "literacy"),
find_items("paper", "confidentiality"),
find_items("mean", "green"),
find_items("sustainable", "black"),
find_items("ethics", "green"),
find_items("funds", "black")
) %>% mutate(lemmas = paste0(lemma_head_x, " - ", lemma_head_y)) %>%
ggplot(aes(y = cosine_distance, label = lemmas)) + geom_histogram()
rbind(find_items("anxiety", "depression"),
find_items("female", "male"),
find_items("democrat", "republican"),
find_items("abnormality", "disease"),
find_items("alpha", "beta"),
find_items("audio", "video"),
find_items("pear", "raspberry"),
find_items("sushi", "pizza"),
find_items("small", "large"),
find_items("environmentalist", "socialist"),
find_items("sugar", "nicotine"),
find_items("computer", "radio"),
find_items("publishing", "literacy"),
find_items("paper", "confidentiality"),
find_items("mean", "green"),
find_items("sustainable", "black"),
find_items("ethics", "green"),
find_items("funds", "black")
) %>% mutate(lemmas = paste0(lemma_head_x, " - ", lemma_head_y)) %>%
ggplot(aes(x = cosine_distance, y = lemmas)) + geom_col(stat="identity")
rbind(find_items("anxiety", "depression"),
find_items("female", "male"),
find_items("democrat", "republican"),
find_items("abnormality", "disease"),
find_items("alpha", "beta"),
find_items("audio", "video"),
find_items("pear", "raspberry"),
find_items("sushi", "pizza"),
find_items("small", "large"),
find_items("environmentalist", "socialist"),
find_items("sugar", "nicotine"),
find_items("computer", "radio"),
find_items("publishing", "literacy"),
find_items("paper", "confidentiality"),
find_items("mean", "green"),
find_items("sustainable", "black"),
find_items("ethics", "green"),
find_items("funds", "black")
) %>% mutate(lemmas = factor(paste0(lemma_head_x, " - ", lemma_head_y), levels = paste0(lemma_head_x, " - ", lemma_head_y))) %>%
ggplot(aes(x = cosine_distance, y = lemmas)) + geom_col(stat="identity")
rbind(find_items("anxiety", "depression"),
find_items("female", "male"),
find_items("democrat", "republican"),
find_items("abnormality", "disease"),
find_items("alpha", "beta"),
find_items("audio", "video"),
find_items("pear", "raspberry"),
find_items("sushi", "pizza"),
find_items("small", "large"),
find_items("environmentalist", "socialist"),
find_items("sugar", "nicotine"),
find_items("computer", "radio"),
find_items("publishing", "literacy"),
find_items("paper", "confidentiality"),
find_items("mean", "green"),
find_items("sustainable", "black"),
find_items("ethics", "green"),
find_items("funds", "black")
) %>% mutate(lemmas = factor(paste0(lemma_head_x, " - ", lemma_head_y), levels = paste0(lemma_head_x, " - ", lemma_head_y))) %>%
ggplot(aes(x = cosine_distance, y = lemmas)) + geom_col()
rbind(find_items("anxiety", "depression"),
find_items("female", "male"),
find_items("democrat", "republican"),
find_items("abnormality", "disease"),
find_items("alpha", "beta"),
find_items("audio", "video"),
find_items("pear", "raspberry"),
find_items("sushi", "pizza"),
find_items("small", "large"),
find_items("environmentalist", "socialist"),
find_items("sugar", "nicotine"),
find_items("computer", "radio"),
find_items("publishing", "literacy"),
find_items("paper", "confidentiality"),
find_items("mean", "green"),
find_items("sustainable", "black"),
find_items("ethics", "green"),
find_items("funds", "black")
) %>% mutate(lemmas = factor(paste0(lemma_head_x, " - ", lemma_head_y), levels = paste0(lemma_head_x, " - ", lemma_head_y))) %>%
ggplot(aes(x = cosine_distance, y = lemmas)) + geom_col(fill = "black")
rbind(find_items("anxiety", "depression"),
find_items("female", "male"),
find_items("democrat", "republican"),
find_items("abnormality", "disease"),
find_items("alpha", "beta"),
find_items("audio", "video"),
find_items("pear", "raspberry"),
find_items("sushi", "pizza"),
find_items("small", "large"),
find_items("environmentalist", "socialist"),
find_items("sugar", "nicotine"),
find_items("computer", "radio"),
find_items("publishing", "literacy"),
find_items("paper", "confidentiality"),
find_items("mean", "green"),
find_items("sustainable", "black"),
find_items("ethics", "green"),
find_items("funds", "black")
) %>% mutate(lemmas = factor(paste0(lemma_head_x, " - ", lemma_head_y), levels = paste0(lemma_head_x, " - ", lemma_head_y))) %>%
ggplot(aes(x = cosine_distance, y = lemmas)) + geom_col(fill = "black") + geom_bw()
rbind(find_items("anxiety", "depression"),
find_items("female", "male"),
find_items("democrat", "republican"),
find_items("abnormality", "disease"),
find_items("alpha", "beta"),
find_items("audio", "video"),
find_items("pear", "raspberry"),
find_items("sushi", "pizza"),
find_items("small", "large"),
find_items("environmentalist", "socialist"),
find_items("sugar", "nicotine"),
find_items("computer", "radio"),
find_items("publishing", "literacy"),
find_items("paper", "confidentiality"),
find_items("mean", "green"),
find_items("sustainable", "black"),
find_items("ethics", "green"),
find_items("funds", "black")
) %>% mutate(lemmas = factor(paste0(lemma_head_x, " - ", lemma_head_y), levels = paste0(lemma_head_x, " - ", lemma_head_y))) %>%
ggplot(aes(x = cosine_distance, y = lemmas)) + geom_col(fill = "black") + theme_bw()
rbind(find_items("anxiety", "depression"),
find_items("female", "male"),
find_items("democrat", "republican"),
find_items("abnormality", "disease"),
find_items("alpha", "beta"),
find_items("audio", "video"),
find_items("pear", "raspberry"),
find_items("sushi", "pizza"),
find_items("small", "large"),
find_items("environmentalist", "socialist"),
find_items("sugar", "nicotine"),
find_items("computer", "radio"),
find_items("publishing", "literacy"),
find_items("paper", "confidentiality"),
find_items("mean", "green"),
find_items("sustainable", "black"),
find_items("ethics", "green"),
find_items("funds", "black")
) %>% mutate(lemmas = factor(paste0(lemma_head_x, " - ", lemma_head_y), levels = paste0(lemma_head_x, " - ", lemma_head_y))) %>%
ggplot(aes(x = cosine_distance, y = lemmas)) + geom_col(fill = "black") + theme_bw() + ylab("Lemmas") + xlab("Cosine distance")
ggsave("xnewy_examples_distance.png")
distances %>% ggplot(aes(x = cosine_distance)) + geom_histogram(binwidth = 0.03, col = "black", fill = "grey") + theme_classic() + ylab("Count") + xlab("Cosine distance")
distances %>% ggplot(aes(x = cosine_distance)) + geom_histogram(binwidth = 0.03, col = "black", fill = "darkgrey") + theme_classic() + ylab("Count") + xlab("Cosine distance")
distances %>% ggplot(aes(x = cosine_distance)) + geom_histogram(binwidth = 0.03, col = "black", fill = "grey70") + theme_classic() + ylab("Count") + xlab("Cosine distance")
distances %>% ggplot(aes(x = cosine_distance)) + geom_histogram(binwidth = 0.03, col = "black", fill = "grey20") + theme_classic() + ylab("Count") + xlab("Cosine distance")
distances %>% ggplot(aes(x = cosine_distance)) + geom_histogram(binwidth = 0.03, col = "black", fill = "grey30") + theme_classic() + ylab("Count") + xlab("Cosine distance")
distances %>% ggplot(aes(x = cosine_distance)) + geom_histogram(binwidth = 0.03, col = "black", fill = "grey50") + theme_classic() + ylab("Count") + xlab("Cosine distance")
ggsave("cosine_distance_hist.png")
d
View(distances)
filter(d, head_x=="ethics")
filter(d, head_x=="ethics" & head_y=="sex")
filter(d, head_x=="ethics" & head_y=="sex") %>% select(left, key, right)
filter(d, head_x=="ethics" & head_y=="sex") %>% select(Left, Key, Right)
filter(d, head_x=="ethics" & head_y=="sex") %>% select(Left)
filter(d, head_x=="ethics" & head_y=="sex") %>% as.data.frame %>% select(Left, Key, Right)
filter(d, head_x=="savings" & head_y=="sand") %>% as.data.frame %>% select(Left, Key, Right)
filter(d, head_x=="developers" & head_y=="barbarians") %>% as.data.frame %>% select(Left, Key, Right)
remotes::install_github("AllanCameron/geomtextpath")
